# Prompts for Cohere's Command models. While there is room for some improvement, the current results are encouraging.
# Command model works better than Command Light (Nightly) and is our current recommendation for Cohere.
prompts:
  - task: generate_user_intent
    models:
      - cohere/command
      - cohere/command-light
      - cohere/command-light-nightly
    content: |-
      """
      {{ general_instructions }}
      Your task is to generate a short summary called user intent for the last user message in a conversation.
      """

      # This is how a conversation between a user and the bot can go:
      {{ sample_conversation | verbose_v1 }}

      # This is the current conversation between the user and the bot:
      {{ sample_conversation | first_turns(2) | verbose_v1 }}
      {{ history | colang | verbose_v1 }}

      # These are some examples how the user talks:
      {{ examples | verbose_v1 }}
      # Generate the user intent for the next message. If possible, copy one of the intents from the example list above:
      {{ history | colang | last_turns(1) | verbose_v1 }}

    output_parser: "verbose_v1"

  - task: generate_next_steps
    models:
      - cohere/command
      - cohere/command-light
      - cohere/command-light-nightly
    content: |-
      """
      {{ general_instructions }}
      """

      # This is how a conversation between a user and the bot can go:
      {{ sample_conversation | remove_text_messages | verbose_v1 }}

      # This how the bot thinks, use these examples to generate the bot intent:
      {{ examples | remove_text_messages | verbose_v1 }}

      # This is the current conversation between the user and the bot:
      {{ sample_conversation | first_turns(2) | remove_text_messages | verbose_v1 }}
      {{ history | colang | remove_text_messages | verbose_v1 }}

    output_parser: "verbose_v1"

  - task: generate_bot_message
    models:
      - cohere/command
      - cohere/command-light
      - cohere/command-light-nightly
    content: |-
      """
      {{ general_instructions }}
      """

      # This is how a conversation between a user and the bot can go:
      {{ sample_conversation | verbose_v1 }}

      {% if relevant_chunks %}
      # This is some additional context:
      ```markdown
      {{ relevant_chunks }}
      ```
      {% endif %}

      # This how the bot talks:
      {{ examples | verbose_v1 }}

      # This is the current conversation between the user and the bot:
      {{ sample_conversation | first_turns(2) | verbose_v1 }}
      {{ history | colang | verbose_v1 }}

    output_parser: "verbose_v1"
