flow showcase backchannelling interaction
  bot inform "First, I am going to ask you about your day and will react to keywords such as nice, great or terrible."
  bot inform "Try to answer with a long sentence that contains one of these keywords to see the effect."
  wait 1.0
  bot asks user how the day was

  bot inform "Now I am going to demonstrate how I can dynamically react to other types of inputs. As an example we use a form."
  wait 1.0
  bot asks email address

flow user asked bot to initiate back channelling interaction
  user said "I want to see the back channeling example"
    or user said "can you do the back channeling"

flow user saying something bad
  user saying "\\bterrible\\b|\\bhorrible\\b|\\bquite bad\\b|\\bso bad\\b|\\bvery bad\\b|\\bawful\\b|\\bdreadful\\b|\\bmiserable\\b|\\bunpleasant\\b|\\bdispleasing\\b|\\bdisappointing\\b|\\bdiscouraging\\b|\\bupsetting\\b|\\bfrustrating\\b|\\bannoying\\b|\\birritating\\b|\\baggravating\\b|\\bexasperating\\b|\\bdistressing\\b|\\bdisheartening\\b|\\bdepressing\\b|\\bdismal\\b|\\bgloomy\\b|\\bbleak\\b|\\bgrim\\b|\\bmournful\\b|\\bdoom and gloom\\b|\\btragic\\b|\\bunfortunate\\b|\\bsad\\b|\\bunhappy\\b|\\bsorrowful\\b|\\bmournful\\b|\\bheartbroken\\b|\\bdespondent\\b|\\bdownhearted\\b|\\bdejected\\b|\\bcrestfallen\\b|\\bdisconsolate\\b|\\bmelancholy\\b|\\bblue\\b|\\bmelancholic\\b|\\bdowncast\\b|\\bglum\\b|\\blugubrious\\b|\\bdismayed\\b|\\bcrestfallen\\b|\\bdefeated\\b|\\bdemoralized\\b|\\bcrushed\\b|\\bheartrending\\b|\\bwretched\\b|\\bpitiful\\b|\\bpiteous\\b|\\bwoeful\\b|\\bsorry\\b|\\bregretful\\b|\\bremorseful\\b|\\bguilty\\b|\\bashamed\\b|\\bembarrassed\\b|\\bhumiliated\\b|\\bmortified\\b|\\bshameful\\b|\\bregrettable\\b|\\blamentable\\b|\\bunfortunate\\b|\\bwoeful\\b|\\bmournful\\b|\\bpiteous\\b|\\bdeplorable\\b|\\bdismal\\b|\\btragic\\b|\\bcatastrophic\\b|\\bdisastrous\\b|\\bdevastating\\b|\\bruinous\\b|\\bcruel\\b|\\bharsh\\b|\\bbrutal\\b|\\bruthless\\b|\\bunpleasant\\b|\\bdiscomforting\\b|\\bpainful\\b|\\bhurtful\\b|\\bdistressing\\b|\\bheartbreaking\\b|\\bsaddening\\b|\\bdisheartening\\b|\\bdepressing\\b|\\bdispiriting\\b|\\bdismaying\\b|\\bupsetting\\b|\\bfrustrating\\b|\\bannoying\\b|\\birritating\\b|\\baggravating\\b|\\bexasperating\\b|\\birksome\\b|\\bvexing\\b|\\bexasperating\\b|\\binfuriating\\b|\\bmaddening\\b|\\benraging\\b|\\bangering\\b|\\bunpleasant\\b|\\bundesirable\\b|\\bdisliked\\b|\\bunwanted\\b|\\bunfavorable\\b|\\bunfortunate\\b|\\bunlucky\\b|\\bunpleasant\\b|\\bunsatisfactory\\b|\\bsubpar\\b|\\binferior\\b|\\bdeficient\\b|\\bfaulty\\b|\\bflawed\\b|\\bimperfect\\b|\\binadequate\\b|\\blacking\\b|\\binsufficient\\b|\\bdefective\\b|\\bbroken\\b|\\bdamaged\\b|\\bfaulty\\b|\\bimpaired\\b|\\binoperable\\b|\\bmalfunctioning\\b|\\bnonfunctional\\b|\\bineffective\\b|\\binefficient\\b|\\bunproductive\\b|\\bpointless\\b|\\bfutile\\b|\\bunsuccessful\\b|\\bfailed\\b|\\babortive\\b|\\bunrewarding\\b|\\bunfulfilling\\b|\\bdisappointing\\b|\\bunsatisfying\\b|\\bunpleasant\\b|\\buncomfortable\\b|\\bawkward\\b|\\bembarrassing\\b|\\bunpleasant\\b|\\bunappealing\\b|\\bunattractive\\b|\\brepulsive\\b|\\brevolting\\b|\\bdisgusting\\b|\\boffensive\\b|\\bobjectionable\\b|\\bvile\\b|\\bnasty\\b|\\bodious\\b|\\bnoxious\\b|\\brepugnant\\b|\\babhorrent\\b|\\bdetestable\\b|\\bhateful\\b|\\babominable\\b|\\bintolerable\\b|\\bunbearable\\b|\\binsufferable\\b|\\bunendurable\\b|\\bpainful\\b|\\bhurtful\\b|\\bagonizing\\b|\\bdistressing\\b|\\bexcruciating\\b" as $user_saying_ref
  log "BAD  : {{$user_saying_ref.context.transcript}}"

flow user saying something nice
  $said_nice =  await user saying"(?<!not\\s)nice\\b|(?<!not\\s)great\\b|\\bperfect\\b|\\bawesome\\b|\\bfantastic\\b|\\bexcellent\\b|\\bwonderful\\b|\\bamazing\\b|\\bterrific\\b|\\boutstanding\\b|\\bsuperb\\b|\\bsplendid\\b|\\bmarvelous\\b|\\bincredible\\b|\\bfabulous\\b|\\bstellar\\b|\\bphenomenal\\b|\\bsplendiferous\\b|\\bremarkable\\b|\\bexceptional\\b|\\bbrilliant\\b|\\bmagnificent\\b|\\bpraiseworthy\\b|\\bcommendable\\b|\\bglorious\\b|\\bdivine\\b|\\bmajestic\\b|\\bsplendiferous\\b|\\bpositive\\b|\\bupbeat\\b|\\bencouraging\\b|\\boptimistic\\b|\\buplifting\\b|\\binspiring\\b|\\bheartening\\b|\\bcheerful\\b|\\bjoyful\\b|\\bdelightful\\b|\\bpleasing\\b|\\bsatisfying\\b|\\bgratifying\\b|\\bcontent\\b|\\bfulfilled\\b|\\bsatisfied\\b|\\boverjoyed\\b|\\becstatic\\b|\\bblissful\\b|\\bradiant\\b|\\belated\\b|\\bexultant\\b|\\bjubilant\\b|\\bgleeful\\b|\\bmerry\\b|\\blively\\b|\\bvibrant\\b|\\bupbeat\\b|\\bpositive\\b|\\bfortunate\\b|\\blucky\\b|\\bblessed\\b|\\bprivileged\\b|\\bgrateful\\b|\\bthankful\\b|\\bappreciative\\b|\\bcontent\\b|\\bpleased\\b|\\bdelighted\\b|\\bhappy\\b|\\bjoyful\\b|\\belated\\b|\\bcheerful\\b|\\bsmiling\\b|\\bbeaming\\b|\\bradiant\\b|\\bsunny\\b|\\bbuoyant\\b|\\boptimistic\\b|\\bhopeful\\b|\\bconfident\\b|\\bpositive\\b|\\bupbeat\\b|\\bencouraged\\b|\\binspired\\b|\\bmotivated\\b|\\bempowered\\b|\\binvigorated\\b|\\brefreshed\\b|\\benergized\\b|\\brevitalized\\b|\\brestored\\b|\\brejuvenated\\b|\\buplifted\\b|\\benthusiastic\\b|\\bpassionate\\b|\\bzealous\\b|\\bardent\\b|\\bfervent\\b|\\beager\\b|\\bexcited\\b|\\bthrilled\\b|\\belated\\b|\\boverjoyed\\b|\\becstatic\\b|\\bexhilarated\\b|\\bjubilant\\b|\\bcelebratory\\b|\\btriumphant\\b|\\bvictorious\\b|\\baccomplished\\b|\\bsuccessful\\b|\\btriumphant\\b|\\bvictorious\\b|\\baccomplished\\b|\\bsuccessful\\b|\\bfulfilled\\b|\\bsatisfied\\b|\\bcontent\\b|\\bpleased\\b|\\bgratified\\b|\\bcontented\\b|\\bjoyous\\b|\\bradiant\\b|\\belated\\b|\\bblissful\\b|\\becstatic\\b|\\boverjoyed\\b|\\beuphoric\\b|\\bexultant\\b|\\bjubilant\\b|\\bgleeful\\b|\\bmerry\\b|\\blively\\b|\\bspirited\\b|\\banimated\\b|\\benthusiastic\\b|\\benergetic\\b|\\bvibrant\\b|\\bdynamic\\b|\\bzestful\\b|\\blighthearted\\b|\\bcarefree\\b|\\bplayful\\b|\\bjoyful\\b|\\bhappy\\b|\\bdelighted\\b|\\bpleased\\b|\\bsatisfied\\b|\\bcontent\\b|\\bgrateful\\b|\\bthankful\\b|\\bappreciative\\b|\\bpositive\\b|\\boptimistic\\b|\\bhopeful\\b|\\bconfident\\b|\\bupbeat\\b|\\bencouraged\\b|\\binspired\\b|\\bmotivated\\b|\\bempowered\\b|\\binvigorated\\b|\\brefreshed\\b|\\benergized\\b"
  log "NICE : {{$said_nice}}"

flow bot reacts to bad things
  user saying something bad
  bot say "Ohh"
    and bot gesture "shake head"

flow bot reacts to nice things
  user saying something nice
  bot say "Nice"
    and bot gesture "celebrate something going well"

flow bot reacts to user said something
  user said something with pause 1.0
  bot say "Hmm?"

flow user said something with pause $time_s
  # meta: exclude from llm
  # meta: user intent
  while True
    match UtteranceUserAction.Finished() as $event
    start wait $time_s as $timer_ref
    when $timer_ref.Finished()
      break
    orwhen UtteranceUserAction.Started() or UtteranceUserAction.TranscriptUpdated()
      send $timer_ref.Stop()

  return $event.arguments.final_transcript


flow bot asks user how the day was
  activate bot reacts to nice things
  activate bot reacts to bad things
  activate bot reacts to user said something

  start VisualInformationSceneAction(title="Verbal Backchanneling", support_prompts=[], content=[{"text":"Try something like:"},{"text":"\"I had a WONDERFUL morning going for a coffee with an old friend. However things went TERRIBLE in the afternoon during a meeting with a client.\""}, {"text":"KEYWORD EXAMPLES"}, {"image":"https://placehold.co/600x400/orange/white?text=Positive","text":"great, wonderful, very nice, splendid, joyful, ..."}, {"image":"https://placehold.co/600x400/darkcyan/white?text=Negative", "text":"terrible, very bad, horrible, awful, miserable, ..."}]) as $info
  bot say "How was your day?"
  wait 1.5
  start bot posture "listening"

  user said something with pause 3.5

  send StopFlow(flow_id="bot reacts to nice things")
  send StopFlow(flow_id="bot reacts to bad things")

  bot say "Thanks for sharing"


flow bot asks email address
  bot ask "Please enter a valid email address to continue"
  start VisualFormSceneAction(prompt="Enter valid email",inputs=[{"id": "email", "description": "email address", "value" : ""}]) as $action

  while True
    when VisualFormSceneAction.InputUpdated(interim_inputs=[{"id": "email",  "value" : r"@$"}])
        bot say "And now only the domain missing!"
    orwhen VisualFormSceneAction.InputUpdated(interim_inputs=[{"id": "email",  "value" : r"^[-\w\.]+@([\w-]+\.)+[\w-]{2,4}$"}])
        bot say "Looks like a valid email address to me, just click ok to confirm" and bot gesture "success"
    orwhen VisualFormSceneAction.ConfirmationUpdated(confirmation_status="confirm")
        bot say "Thank you" and bot gesture "bowing"
        break
    orwhen VisualFormSceneAction.ConfirmationUpdated(confirmation_status="cancel")
        bot say "OK. Maybe another time."
        break
